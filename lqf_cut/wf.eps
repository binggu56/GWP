%!PS-Adobe-2.0 EPSF-2.0
%%Title: wf.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Oct 23 10:45:17 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (wf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Bing Gu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct 23 10:45:17 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
854 1185 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1185 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
854 1923 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1923 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
854 2660 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
854 3397 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3397 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
854 4135 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4135 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MRshow
1.000 UL
LTb
854 4872 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
2388 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2388 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
3922 448 M
0 63 V
0 4361 R
0 -63 V
stroke
3922 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
5456 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5456 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
6136 0 V
0 4424 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 140.0 0.0 true true 0 (y)]
[(Helvetica) 140.0 0.0 true true 0 (\(x,t\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3922 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (x [a.u.])]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
2.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=100)]
] -46.7 MRshow
LT0
6423 4739 M
399 0 V
1623 448 M
62 0 V
61 0 V
62 0 V
61 0 V
61 1 V
62 1 V
61 2 V
62 4 V
61 7 V
62 13 V
61 21 V
61 33 V
62 46 V
61 63 V
62 81 V
61 99 V
61 116 V
62 131 V
61 147 V
62 163 V
61 181 V
62 200 V
61 221 V
61 239 V
62 250 V
61 251 V
62 239 V
61 217 V
62 186 V
61 150 V
61 113 V
62 77 V
61 41 V
62 4 V
61 -34 V
61 -72 V
62 -109 V
61 -143 V
62 -171 V
61 -189 V
62 -201 V
61 -207 V
61 -208 V
62 -205 V
61 -202 V
62 -194 V
61 -184 V
62 -171 V
61 -156 V
61 -139 V
62 -124 V
61 -108 V
62 -94 V
61 -81 V
61 -69 V
62 -56 V
61 -45 V
62 -35 V
61 -26 V
62 -19 V
61 -15 V
61 -10 V
62 -8 V
61 -6 V
62 -4 V
61 -2 V
62 -2 V
61 -1 V
61 -1 V
62 -1 V
61 -1 V
62 0 V
61 -1 V
61 0 V
62 -1 V
61 0 V
62 -1 V
61 0 V
62 0 V
61 0 V
61 -1 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
23 0 V
stroke
LT1
LTb
6339 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=300)]
] -46.7 MRshow
LT1
6423 4599 M
399 0 V
1562 448 M
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
61 1 V
62 1 V
61 1 V
62 4 V
61 6 V
62 11 V
61 18 V
61 27 V
62 42 V
61 59 V
62 80 V
61 105 V
61 131 V
62 158 V
61 183 V
62 207 V
61 229 V
62 246 V
61 259 V
61 270 V
62 275 V
61 272 V
62 262 V
61 242 V
62 210 V
61 169 V
61 116 V
62 58 V
61 -5 V
62 -66 V
61 -123 V
61 -172 V
62 -209 V
61 -236 V
62 -251 V
61 -257 V
62 -253 V
61 -244 V
61 -229 V
62 -211 V
61 -193 V
62 -173 V
61 -154 V
62 -138 V
61 -123 V
61 -108 V
62 -95 V
61 -83 V
62 -71 V
61 -60 V
61 -49 V
62 -38 V
61 -29 V
62 -21 V
61 -15 V
62 -11 V
61 -7 V
61 -4 V
62 -3 V
61 -1 V
62 -1 V
61 -1 V
62 -1 V
61 0 V
61 -1 V
62 0 V
61 -1 V
62 -1 V
61 -1 V
61 -1 V
62 0 V
61 -1 V
62 0 V
61 0 V
62 -1 V
61 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
23 0 V
stroke
LT2
LTb
6339 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=500)]
] -46.7 MRshow
LT2
6423 4459 M
399 0 V
1685 448 M
61 0 V
62 0 V
61 0 V
61 0 V
62 0 V
61 1 V
62 1 V
61 2 V
62 3 V
61 7 V
61 13 V
62 20 V
61 32 V
62 50 V
61 70 V
61 98 V
62 126 V
61 158 V
62 188 V
61 217 V
62 242 V
61 265 V
61 285 V
62 302 V
61 314 V
62 320 V
61 315 V
62 293 V
61 251 V
61 189 V
62 110 V
61 23 V
62 -61 V
61 -132 V
61 -185 V
62 -216 V
61 -229 V
62 -230 V
61 -226 V
62 -223 V
61 -225 V
61 -232 V
62 -242 V
61 -249 V
62 -250 V
61 -242 V
62 -222 V
61 -194 V
61 -160 V
62 -125 V
61 -91 V
62 -63 V
61 -41 V
61 -26 V
62 -15 V
61 -8 V
62 -4 V
61 -2 V
62 -1 V
61 -1 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
61 1 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
61 -1 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
23 0 V
stroke
LT3
LTb
6339 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=600)]
] -46.7 MRshow
LT3
6423 4319 M
399 0 V
1685 448 M
61 0 V
62 0 V
61 0 V
61 0 V
62 0 V
61 1 V
62 1 V
61 3 V
62 6 V
61 10 V
61 18 V
62 31 V
61 48 V
62 72 V
61 102 V
61 135 V
62 170 V
61 202 V
62 228 V
61 245 V
62 253 V
61 253 V
61 248 V
62 242 V
61 236 V
62 232 V
61 228 V
62 220 V
61 203 V
61 173 V
62 126 V
61 65 V
62 -8 V
61 -84 V
61 -155 V
62 -212 V
61 -254 V
62 -276 V
61 -283 V
62 -277 V
61 -265 V
61 -248 V
62 -232 V
61 -217 V
62 -200 V
61 -186 V
62 -169 V
61 -151 V
61 -130 V
62 -109 V
61 -88 V
62 -67 V
61 -49 V
61 -34 V
62 -23 V
61 -14 V
62 -9 V
61 -5 V
62 -2 V
61 -2 V
61 0 V
62 -1 V
61 0 V
62 1 V
61 0 V
62 0 V
61 0 V
61 0 V
62 1 V
61 0 V
62 0 V
61 -1 V
61 0 V
62 0 V
61 -1 V
62 0 V
61 0 V
62 0 V
61 -1 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
62 0 V
61 0 V
23 0 V
1.000 UP
stroke
1.000 UL
LT4
LTb
6339 4179 M
[ [(Symbol) 140.0 0.0 true true 0 (y)]
[(Helvetica) 140.0 0.0 true true 0 (\(x,0\))]
] -46.7 MRshow
LT4
886 448 Star
948 448 Star
1009 448 Star
1071 448 Star
1132 448 Star
1193 448 Star
1255 448 Star
1316 448 Star
1378 448 Star
1439 448 Star
1500 449 Star
1562 449 Star
1623 450 Star
1685 451 Star
1746 452 Star
1808 454 Star
1869 457 Star
1930 462 Star
1992 469 Star
2053 479 Star
2115 493 Star
2176 511 Star
2238 537 Star
2299 570 Star
2360 614 Star
2422 671 Star
2483 742 Star
2545 831 Star
2606 939 Star
2667 1068 Star
2729 1220 Star
2790 1395 Star
2852 1593 Star
2913 1812 Star
2975 2050 Star
3036 2302 Star
3097 2561 Star
3159 2822 Star
3220 3077 Star
3282 3316 Star
3343 3531 Star
3405 3714 Star
3466 3858 Star
3527 3956 Star
3589 4004 Star
3650 4001 Star
3712 3945 Star
3773 3840 Star
3834 3691 Star
3896 3503 Star
3957 3284 Star
4019 3042 Star
4080 2786 Star
4142 2525 Star
4203 2266 Star
4264 2016 Star
4326 1781 Star
4387 1564 Star
4449 1369 Star
4510 1197 Star
4572 1049 Star
4633 922 Star
4694 817 Star
4756 731 Star
4817 662 Star
4879 607 Star
4940 565 Star
5001 533 Star
5063 508 Star
5124 490 Star
5186 477 Star
5247 468 Star
5309 461 Star
5370 457 Star
5431 454 Star
5493 452 Star
5554 450 Star
5616 449 Star
5677 449 Star
5739 449 Star
5800 448 Star
5861 448 Star
5923 448 Star
5984 448 Star
6046 448 Star
6107 448 Star
6168 448 Star
6230 448 Star
6291 448 Star
6353 448 Star
6622 4179 Star
1.000 UL
LTb
854 4872 N
854 448 L
6136 0 V
0 4424 V
-6136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
